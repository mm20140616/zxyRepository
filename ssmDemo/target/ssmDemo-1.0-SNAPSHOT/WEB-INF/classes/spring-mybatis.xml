<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置自动扫描-->
    <context:component-scan base-package="com.hand" />

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--引入配置文件（读取jdbc.properties配置文件）-->
    <bean id="propertyConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>

    <!--配置数据源(选配destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用)-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>

    <!--配置spring和mybatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--自动扫描mapping.xml文件-->
        <property name="mapperLocations" value="classpath:mappers/*.xml" />
        <!--配置分页插件pageHelper-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            offsetAsPageNum=true
                            rowBoundsWithCount=true
                            pageSizeZero=true
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!--实际上真正需要的是template，但是spring集成mybatis的包默认创建该template，所以可以省略-->
    <!--<bean class="org.mybatis.spring.SqlSessionTemplate" name="sqlSessionTemplate">-->
        <!--<constructor-arg index="0" ref="sqlSessionFactory" />-->
    <!--</bean>-->

    <!--DAO接口所在包名，Spring会自动查找其下的类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hand.mapping"/>
        <!--若设置template，则该处直接引用SQLSessionTemplateBeanName即可-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!--事务管理-->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置拦截service -->
    <!--<aop:config>-->
        <!--<aop:pointcut expression="execution(* com.hand.service..*(..))" id="txPoint"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>-->
    <!--</aop:config>-->

    <!--&lt;!&ndash; 配置事物增强,事物如何切入&ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 所有方法都是事物方法 &ndash;&gt;-->
            <!--<tx:method name="*"/>-->
            <!--&lt;!&ndash; 以get开始的所有方法 &ndash;&gt;-->
            <!--<tx:method name="get*" read-only="true"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
</beans>